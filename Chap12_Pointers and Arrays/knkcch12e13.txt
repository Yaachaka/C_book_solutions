==========================================================================
@@@@ Exercise 13 (Section 12.4): knkcch12e13: Section 8.2 had a program fragment in 
which two nested for loops initialized the array ident for use as an identity matrix. 
Rewrite this code, using a single pointer to step through the array one element at a 
time. Hint: Since we won't be using row and col index variables, it won't be easy to 
tell where to store 1. Instead, we can use the fact that the first element of the array 
should be 1, the next N elements should be 0. the next element should be 1, and so 
forth. Use a variable to keep track of how many consecutive Os have been stored; when 
the count reaches N, itâ€™s time to store 1.
==========================================================================
SOLUTION:
@@@@ 
Given:
#define N 10

double ident[N][N]
int row,col;

for(row=0;row<N;row++)
	for(col=0;col,N;col++)
		if(row==col)
			ident[row][col]=1.0;
		else
			ident[row][col]=0.0;

Modified:
#define N 10

double ident[N][N]
int *p=a[0][0];

for(short i=0;i<2*N;i++)
	if(i%(N+1))
		*p++=0.0;
	else
		*p++=1.0;

==========================================================================
PROGRAM: NA
==========================================================================
PROGRAM OUTPUT: NA
==========================================================================